# Generated by Django 5.1.11 on 2025-07-27 21:37

import django.db.models.deletion
import mayan.apps.databases.model_mixins
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0091_fix_documenttype_verbose_name'),
        ('research', '0002_shareddocument'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this report request', unique=True, verbose_name='Request ID')),
                ('report_type', models.CharField(choices=[('compliance', 'Compliance Report'), ('research_summary', 'Research Summary'), ('audit_trail', 'Audit Trail Report'), ('project_overview', 'Project Overview'), ('security_analysis', 'Security Analysis')], help_text='Type of report to generate', max_length=50, verbose_name='Report Type')),
                ('title', models.CharField(help_text='Human-readable title for this report', max_length=255, verbose_name='Report Title')),
                ('requested_at', models.DateTimeField(auto_now_add=True, help_text='When this report was requested', verbose_name='Requested At')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', help_text='Current status of the report generation', max_length=20, verbose_name='Status')),
                ('started_at', models.DateTimeField(blank=True, help_text='When report generation started', null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When report generation completed', null=True, verbose_name='Completed At')),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='JSON parameters for report generation', verbose_name='Parameters')),
                ('report_file', models.FileField(blank=True, help_text='Generated PDF report file', null=True, upload_to='research_reports/%Y/%m/%d/', verbose_name='Report File')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='Size of the generated report file in bytes', null=True, verbose_name='File Size')),
                ('error_message', models.TextField(blank=True, help_text='Error message if report generation failed', verbose_name='Error Message')),
                ('download_count', models.PositiveIntegerField(default=0, help_text='Number of times this report has been downloaded', verbose_name='Download Count')),
                ('last_downloaded_at', models.DateTimeField(blank=True, help_text='When this report was last downloaded', null=True, verbose_name='Last Downloaded At')),
                ('expires_at', models.DateTimeField(help_text='When this report will be automatically deleted', verbose_name='Expires At')),
            ],
            options={
                'verbose_name': 'Report Request',
                'verbose_name_plural': 'Report Requests',
                'ordering': ['-requested_at'],
            },
            bases=(mayan.apps.databases.model_mixins.ExtraDataModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the report template', max_length=255, verbose_name='Template Name')),
                ('report_type', models.CharField(choices=[('compliance', 'Compliance Report'), ('research_summary', 'Research Summary'), ('audit_trail', 'Audit Trail Report'), ('project_overview', 'Project Overview'), ('security_analysis', 'Security Analysis')], help_text='Type of report this template generates', max_length=50, verbose_name='Report Type')),
                ('description', models.TextField(blank=True, help_text='Description of what this template generates', verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this template was created', verbose_name='Created At')),
                ('default_parameters', models.JSONField(default=dict, help_text='Default parameters for this report template', verbose_name='Default Parameters')),
                ('is_public', models.BooleanField(default=False, help_text='Whether this template is available to all users', verbose_name='Is Public')),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times this template has been used', verbose_name='Usage Count')),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['name'],
            },
            bases=(mayan.apps.databases.model_mixins.ExtraDataModelMixin, models.Model),
        ),
        migrations.AlterModelOptions(
            name='shareddocument',
            options={'ordering': ['-created_at'], 'verbose_name': 'Shared Document', 'verbose_name_plural': 'Shared Documents'},
        ),
        migrations.RemoveIndex(
            model_name='shareddocument',
            name='research_sh_documen_6cd351_idx',
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='access_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of times this document has been accessed', verbose_name='Access Count'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this share', on_delete=django.db.models.deletion.CASCADE, related_name='created_document_shares', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='document',
            field=models.ForeignKey(help_text='Document being shared', on_delete=django.db.models.deletion.CASCADE, related_name='research_shares', to='documents.document', verbose_name='Document'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='expires_at',
            field=models.DateTimeField(help_text='When this share will expire', verbose_name='Expires At'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='last_accessed_at',
            field=models.DateTimeField(blank=True, help_text='Last time this document was accessed', null=True, verbose_name='Last Accessed At'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='last_accessed_from_ip',
            field=models.GenericIPAddressField(blank=True, help_text='IP address of last access', null=True, verbose_name='Last Accessed From IP'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='max_access_count',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum number of times this document can be accessed (optional)', null=True, verbose_name='Max Access Count'),
        ),
        migrations.AlterField(
            model_name='shareddocument',
            name='url_key',
            field=models.UUIDField(default=uuid.uuid4, help_text='Unique key for public access URL', unique=True, verbose_name='URL Key'),
        ),
        migrations.AddIndex(
            model_name='shareddocument',
            index=models.Index(fields=['is_active'], name='research_sh_is_acti_855bdd_idx'),
        ),
        migrations.AddField(
            model_name='reportrequest',
            name='requested_by',
            field=models.ForeignKey(help_text='User who requested this report', on_delete=django.db.models.deletion.CASCADE, related_name='report_requests', to=settings.AUTH_USER_MODEL, verbose_name='Requested By'),
        ),
        migrations.AddField(
            model_name='reporttemplate',
            name='created_by',
            field=models.ForeignKey(help_text='User who created this template', on_delete=django.db.models.deletion.CASCADE, related_name='report_templates', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddIndex(
            model_name='reportrequest',
            index=models.Index(fields=['request_id'], name='research_re_request_ef7a91_idx'),
        ),
        migrations.AddIndex(
            model_name='reportrequest',
            index=models.Index(fields=['status'], name='research_re_status_4c48bb_idx'),
        ),
        migrations.AddIndex(
            model_name='reportrequest',
            index=models.Index(fields=['requested_by', 'requested_at'], name='research_re_request_a8cec9_idx'),
        ),
        migrations.AddIndex(
            model_name='reportrequest',
            index=models.Index(fields=['expires_at'], name='research_re_expires_b74085_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reporttemplate',
            unique_together={('name', 'created_by')},
        ),
    ]
