# Generated by Django 5.1.11 on 2025-07-23 03:41

import django.db.models.deletion
import mayan.apps.databases.model_mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('documents', '0091_fix_documenttype_verbose_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the research dataset', max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the dataset', verbose_name='Description')),
                ('data_collector', models.CharField(blank=True, help_text='Person responsible for data collection', max_length=255, verbose_name='Data Collector')),
                ('dataset_type', models.CharField(choices=[('quantitative', 'Quantitative Data'), ('qualitative', 'Qualitative Data'), ('mixed_methods', 'Mixed Methods'), ('images', 'Images/Visual Data'), ('audio', 'Audio Data'), ('video', 'Video Data'), ('documents', 'Text Documents'), ('spreadsheet', 'Spreadsheet/CSV'), ('database', 'Database Export'), ('other', 'Other')], default='quantitative', help_text='Type of data in this dataset', max_length=20, verbose_name='Dataset Type')),
                ('collection_start_date', models.DateField(blank=True, help_text='When data collection started', null=True, verbose_name='Collection Start Date')),
                ('collection_end_date', models.DateField(blank=True, help_text='When data collection ended', null=True, verbose_name='Collection End Date')),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('collecting', 'Collecting Data'), ('processing', 'Processing'), ('analysis_ready', 'Ready for Analysis'), ('analyzed', 'Analyzed'), ('published', 'Published'), ('archived', 'Archived')], default='planning', help_text='Current status of the dataset', max_length=20, verbose_name='Status')),
                ('is_anonymized', models.BooleanField(default=False, help_text='Whether the data has been anonymized', verbose_name='Anonymized')),
                ('is_validated', models.BooleanField(default=False, help_text='Whether the data has been validated', verbose_name='Validated')),
                ('analysis_software', models.CharField(blank=True, help_text='Software used for analysis (e.g., R, Python, SPSS)', max_length=100, verbose_name='Analysis Software')),
                ('sample_size', models.PositiveIntegerField(blank=True, help_text='Number of records/participants in dataset', null=True, verbose_name='Sample Size')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('datetime_modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Dataset',
                'verbose_name_plural': 'Datasets',
                'ordering': ('study__project__title', 'study__title', 'title'),
            },
            bases=(mayan.apps.databases.model_mixins.ExtraDataModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the research project', max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the research project', verbose_name='Description')),
                ('principal_investigator', models.CharField(help_text='Name of the principal investigator', max_length=255, verbose_name='Principal Investigator')),
                ('institution', models.CharField(blank=True, help_text='Research institution or organization', max_length=255, verbose_name='Institution')),
                ('start_date', models.DateField(help_text='Project start date', verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, help_text='Project end date (optional)', null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', help_text='Current status of the project', max_length=20, verbose_name='Status')),
                ('funding_source', models.CharField(blank=True, help_text='Source of project funding', max_length=255, verbose_name='Funding Source')),
                ('funding_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Total funding amount', max_digits=12, null=True, verbose_name='Funding Amount')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('datetime_modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ('title',),
            },
            bases=(mayan.apps.databases.model_mixins.ExtraDataModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DatasetDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_role', models.CharField(choices=[('raw_data', 'Raw Data'), ('processed_data', 'Processed Data'), ('analysis', 'Analysis Output'), ('visualization', 'Visualization'), ('documentation', 'Documentation'), ('metadata', 'Metadata'), ('protocol', 'Research Protocol'), ('consent_form', 'Consent Form'), ('other', 'Other')], default='raw_data', help_text='Role of this document in the dataset', max_length=20, verbose_name='Document Role')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this document in the dataset', verbose_name='Notes')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order within the dataset', verbose_name='Order')),
                ('datetime_added', models.DateTimeField(auto_now_add=True, verbose_name='Added to Dataset')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='research.dataset', verbose_name='Dataset')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.document', verbose_name='Document')),
            ],
            options={
                'verbose_name': 'Dataset Document',
                'verbose_name_plural': 'Dataset Documents',
                'ordering': ('order', 'datetime_added'),
                'unique_together': {('dataset', 'document')},
            },
        ),
        migrations.AddField(
            model_name='dataset',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='research_datasets', through='research.DatasetDocument', to='documents.document', verbose_name='Documents'),
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the research study', max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the research study', verbose_name='Description')),
                ('lead_researcher', models.CharField(blank=True, help_text='Lead researcher for this study', max_length=255, verbose_name='Lead Researcher')),
                ('study_type', models.CharField(choices=[('observational', 'Observational'), ('experimental', 'Experimental'), ('survey', 'Survey'), ('case_study', 'Case Study'), ('longitudinal', 'Longitudinal'), ('cross_sectional', 'Cross-sectional'), ('meta_analysis', 'Meta-analysis'), ('other', 'Other')], default='observational', help_text='Type of research study', max_length=20, verbose_name='Study Type')),
                ('start_date', models.DateField(blank=True, help_text='Study start date', null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, help_text='Study end date', null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('design', 'Design Phase'), ('data_collection', 'Data Collection'), ('analysis', 'Analysis'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('cancelled', 'Cancelled')], default='design', help_text='Current status of the study', max_length=20, verbose_name='Status')),
                ('target_sample_size', models.PositiveIntegerField(blank=True, help_text='Target number of participants/samples', null=True, verbose_name='Target Sample Size')),
                ('current_sample_size', models.PositiveIntegerField(default=0, help_text='Current number of participants/samples', verbose_name='Current Sample Size')),
                ('ethics_approval_number', models.CharField(blank=True, help_text='Ethics committee approval number', max_length=100, verbose_name='Ethics Approval Number')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('datetime_modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('project', models.ForeignKey(help_text='Project this study belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='studies', to='research.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Study',
                'verbose_name_plural': 'Studies',
                'ordering': ('project__title', 'title'),
                'unique_together': {('project', 'title')},
            },
            bases=(mayan.apps.databases.model_mixins.ExtraDataModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='dataset',
            name='study',
            field=models.ForeignKey(help_text='Study this dataset belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='research.study', verbose_name='Study'),
        ),
        migrations.AlterUniqueTogether(
            name='dataset',
            unique_together={('study', 'title')},
        ),
    ]
